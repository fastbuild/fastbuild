//
// DeepGraph
//
// Create a highly recursive graph with many common sub trees.
// Prior to optimization this worst case could take as long as 30secs
// for each dependency graph traversal.
// After optimization, worst case traversal is sub 10ms.
//
//------------------------------------------------------------------------------

// Use the standard test environment
//------------------------------------------------------------------------------
#include "../testcommon.bff"
Using( .StandardEnvironment )
Settings {}

// CommonOptions
//------------------------------------------------------------------------------
.CompilerOutputPath     = '$Out$/Test/Graph/DeepGraph'

// Compile a real file to create a non-trivial amount of per-object dependencies
//------------------------------------------------------------------------------
ObjectList( 'ObjectList_0' )
{
    // Compile a real file to obtain some non-trivial dependencies
    .CompilerInputFiles = 'Core/FileIO/FileIO.cpp'
    .CompilerOptions    + ' "-I."'
                        + ' -DDEBUG -D_DEBUG'
}
.Targets = { 'ObjectList_0' }

// Create a chain of dependencies resuling in many common
// subtrees to ensure graph parsing optimizes out these redundant
// passes
//------------------------------------------------------------------------------
.Items  = {
            '1',  '2',  '3',  '4',  '5',  '6',  '7',  '8',  '9',  '10',
            '11', '12', '13', '14', '15', '16', '17', '18', '19', '20',
            '21', '22', '23', '24', '25', '26', '27', '28', '29', '30'
          }
ForEach( .Item in .Items )
{
    // Create Alias depending on all previous items
    ObjectList( 'ObjectList_$Item$' )
    {
        .PreBuildDependencies = .Targets
        .CompilerInputAllowNoFiles = true // This ObjectList doesn't compile anything itself
    }

    // Add this new Alias to list of items
    ^Targets + 'ObjectList_$Item$'
}

// Final alias for test to use
//------------------------------------------------------------------------------
Alias( 'all' )
{
    // Depend on final list of .Targets
}
