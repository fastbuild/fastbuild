// TestFramework
//------------------------------------------------------------------------------
{
	.ProjectName		= 'TestFramework'
	.ProjectPath		= 'TestFramework'

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	VCXProject( '$ProjectName$-proj' )
	{
		.ProjectOutput				= '$ProjectPath$\$ProjectName$.vcxproj'
		.ProjectInputPaths			= '$ProjectPath$\'
		.ProjectBasePath			= '$ProjectPath$\'
	}

	// Unity
	//--------------------------------------------------------------------------
    {
        // Common options
        .UnityInputPath             = '$ProjectPath$\'
        .UnityOutputPath            = '$OutputBase$\Unity\$ProjectPath$\'

        // Windows
        Unity( '$ProjectName$-Unity-Windows' )
        {
        }

        // Linux
        Unity( '$ProjectName$-Unity-Linux' )
        {
        }

        // OSX
        Unity( '$ProjectName$-Unity-OSX' )
        {
        }
    }

	// Windows (MSVC)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_MSVC )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Test framework uses exceptions
			.CompilerOptions			+ .UseExceptions

			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
	}

	// Windows (Clang)
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs_Windows_Clang )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
			// Test framework uses exceptions
			.CompilerOptions			+ .UseExceptions

			// Input (Unity)
			.CompilerInputUnity			= '$ProjectName$-Unity-Windows'

			// Output
			.CompilerOutputPath			= '$OutputBase$\$ProjectName$\'
 			.LibrarianOutput 			= '$OutputBase$\$ProjectName$\$ProjectName$.lib'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
	}
	
    // Linux (GCC)
    //--------------------------------------------------------------------------
    ForEach( .Config in .Configs_Linux_GCC )
    {
        Using( .Config )
        .OutputBase + '\$Platform$-$Config$'

        // Static Library
        Library( '$ProjectName$-Lib-$Platform$-$Config$' )
        {
            // Test framework uses exceptions
            .CompilerOptions            + .UseExceptions
            
            // Input (Unity)
            .CompilerInputUnity         = '$ProjectName$-Unity-Linux'

            // Output
            .CompilerOutputPath         = '$OutputBase$\$ProjectName$\'
            .LibrarianOutput            = '$OutputBase$\$ProjectName$\$ProjectName$.a'
        }
        Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
    }	

    // OSX (Clang)
    //--------------------------------------------------------------------------
    ForEach( .Config in .Configs_OSX_Clang )
    {
        Using( .Config )
        .OutputBase + '\$Platform$-$Config$'

        // Static Library
        Library( '$ProjectName$-Lib-$Platform$-$Config$' )
        {
            // Test framework uses exceptions
            .CompilerOptions            + .UseExceptions

            // Input (Unity)
            .CompilerInputUnity         = '$ProjectName$-Unity-OSX'

            // Output
            .CompilerOutputPath         = '$OutputBase$\$ProjectName$\'
            .LibrarianOutput            = '$OutputBase$\$ProjectName$\$ProjectName$.a'
        }
        Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
    }

	// Aliases
	//--------------------------------------------------------------------------
	// Per-Config
	Alias( '$ProjectName$-Debug' )		{ .Targets = { '$ProjectName$-X86-Debug',   '$ProjectName$-X64-Debug', '$ProjectName$-X86Clang-Debug' } }
	Alias( '$ProjectName$-Profile' )	{ .Targets = { '$ProjectName$-X86-Profile', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-Release' )	{ .Targets = { '$ProjectName$-X86-Release', '$ProjectName$-X64-Release' } }

	// Per-Platform
	Alias( '$ProjectName$-X86' )		{ .Targets = { '$ProjectName$-X86-Debug', '$ProjectName$-X86-Release', '$ProjectName$-X86-Profile' } }
	Alias( '$ProjectName$-X64' )		{ .Targets = { '$ProjectName$-X64-Debug', '$ProjectName$-X64-Release', '$ProjectName$-X64-Profile' } }
	Alias( '$ProjectName$-X86Clang' )	{ .Targets = { '$ProjectName$-X86Clang-Debug' } }
    Alias( '$ProjectName$-x64Linux' )   { .Targets = { '$ProjectName$-X64Linux-Debug', '$ProjectName$-X64Linux-Release', '$ProjectName$-X64Linux-Profile' } }
    Alias( '$ProjectName$-x64OSX' )     { .Targets = { '$ProjectName$-x64OSX-Debug', '$ProjectName$-x64OSX-Release', '$ProjectName$-x64OSX-Profile' } }

	// All
	Alias( '$ProjectName$' )
	{
		.Targets = { '$ProjectName$-Debug', '$ProjectName$-Profile', '$ProjectName$-Release' }
	}
}
