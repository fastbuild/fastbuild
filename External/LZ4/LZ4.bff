// LZ4
//------------------------------------------------------------------------------
.LZ4BasePath		= '../External/LZ4/lz4-1.8.2/lib'
.LZ4IncludePaths	= ' "-I$LZ4BasePath$"'
{
	.ProjectName		= 'LZ4'
	.ProjectPath		= '$LZ4BasePath$'

    // Target/Compiler specific options
    .LZ4Options_x64     = [ 
                            .LZ4CompilerOptions	= ' /wd6239'	// (<non-zero constant> && <expression>) always evaluates to the result of <expression>.  Did you intend to use the bitwise-and operator?
											    + ' /wd6262'	// Function uses '%u' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.
											    + ' /wd6385'	// Reading invalid data from '%s':  the readable size is '%u' bytes, but '%u' bytes may be read.: Lines:
											    + ' /wd28251'	// warning C28251: Inconsistent annotation for '_setjmp': this instance has no annotations. See <no file>(0).
					      ]
    .LZ4Options_x64Clang= [ 
                            .LZ4CompilerOptions = ' -Wno-shift-count-overflow'
                                                + ' -O2'
					      ]
    .LZ4Options_x64Linux= [ 
                            .LZ4CompilerOptions = ' -O2'
                          ]
    .LZ4Options_x64ClangLinux  = .LZ4Options_x64Linux
    .LZ4Options_x64OSX  = [ 
                            .LZ4CompilerOptions = ' -O2'
                          ]

	// Library
	//--------------------------------------------------------------------------
	ForEach( .Config in .Configs )
	{
		Using( .Config )
		.OutputBase + '\$Platform$-$Config$'

		Using( ."LZ4Options_$Platform$" )

		// Static Library
		Library( '$ProjectName$-Lib-$Platform$-$Config$' )
		{
            // Input - Only build specific files we use
	        .CompilerInputFiles         = { 
                                            '$LZ4BasePath$\lz4.c'
                                            '$LZ4BasePath$\xxhash.c'
                                          }

            // Options
			.CompilerOptions			= .CompilerOptionsC
                                        + .LZ4IncludePaths
										+ .LZ4CompilerOptions
                                        #if __WINDOWS__
                                            - ' /Od'
                                            - ' /RTC1'
                                        #else
                                            - ' -O0'
                                        #endif

			// Output
			.CompilerOutputPath			= '$OutputBase$/External/$ProjectName$/'
            .LibrarianOutput            = '$OutputBase$/External/$ProjectName$/$ProjectName$$LibExtension$'
		}
		Alias( '$ProjectName$-$Platform$-$Config$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$Config$' }
	}

	// Aliases
	//--------------------------------------------------------------------------
    #include "../../Code/gen_default_aliases.bff"

	// Visual Studio Project Generation
	//--------------------------------------------------------------------------
	#if __WINDOWS__
		VCXProject( '$ProjectName$-proj' )
		{
			.ProjectOutput				= '../tmp/VisualStudio/Projects/$ProjectName$.vcxproj'
			.ProjectInputPaths			= '$ProjectPath$\'
	        .ProjectFiles               = '../External/LZ4/LZ4.bff'
			.ProjectBasePath			= '$ProjectPath$\'
	
			.ProjectX64Debug		= [ Using( .ProjectX64Debug )			.Target = '$ProjectName$-X64-Debug' ]
			.ProjectX64Profile		= [ Using( .ProjectX64Profile )			.Target = '$ProjectName$-X64-Profile' ]
			.ProjectX64Release		= [ Using( .ProjectX64Release )			.Target = '$ProjectName$-X64-Release' ]
			.ProjectX64ClangDebug	= [ Using( .ProjectX64ClangDebug )		.Target = '$ProjectName$-X64Clang-Debug' ]
			.ProjectX64ClangProfile	= [ Using( .ProjectX64ClangProfile )	.Target = '$ProjectName$-X64Clang-Profile' ]
			.ProjectX64ClangRelease	= [ Using( .ProjectX64ClangRelease )	.Target = '$ProjectName$-X64Clang-Release' ]
			.ProjectConfigs			= { .ProjectX64Debug, .ProjectX64Profile, .ProjectX64Release,
										.ProjectX64ClangDebug, .ProjectX64ClangProfile, .ProjectX64ClangRelease }
		}
	#endif

	// XCode Project Generation
	//--------------------------------------------------------------------------
	#if __OSX__
		XCodeProject( '$ProjectName$-xcodeproj' )
		{
			.ProjectOutput 				= '../tmp/XCode/Projects/0_External/$ProjectName$.xcodeproj/project.pbxproj'
			.ProjectInputPaths			= '$ProjectPath$/'
			.ProjectBasePath			= '$ProjectPath$/'
	
			.XCodeBuildWorkingDir		= '../../../../Code/'
			
			.ProjectOSXDebug 		= [ .Config = 'Debug' 	.Target = '$ProjectName$-x64OSX-Debug' ]
			.ProjectOSXProfile 		= [ .Config = 'Profile' .Target = '$ProjectName$-x64OSX-Profile' ]
			.ProjectOSXRelease 		= [ .Config = 'Release' .Target = '$ProjectName$-x64OSX-Release' ]		
			.ProjectConfigs 		= { .ProjectOSXDebug, .ProjectOSXProfile, .ProjectOSXRelease }	
		}
	#endif
}
